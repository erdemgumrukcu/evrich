networks:
  aggregator_network:
    driver: bridge
  control_network:
    driver: bridge
  external_network:
    driver: bridge
services:
  aggregator_1:
    build:
      context: ./aggregator
      dockerfile: ./Dockerfile
    container_name: aggregator_1
    depends_on:
    - datafev
    environment:
    - CLUSTER_ID=1
    - IP_ADDRESS=0.0.0.0
    - PORT_NUMBER=9001
    - PYTHONUNBUFFERED=1
    - DATAFEV_CHARGER_SELECTION_URL=http://datafev:9004/charger_selection/
    - DATAFEV_RESERVATION_URL=http://datafev:9004/reservation/
    networks:
    - aggregator_network
    - external_network
    ports:
    - 9001:9001
  aggregator_2:
    build:
      context: ./aggregator
      dockerfile: ./Dockerfile
    container_name: aggregator_2
    depends_on:
    - datafev
    environment:
    - CLUSTER_ID=2
    - IP_ADDRESS=0.0.0.0
    - PORT_NUMBER=9002
    - PYTHONUNBUFFERED=1
    - DATAFEV_CHARGER_SELECTION_URL=http://datafev:9004/charger_selection/
    - DATAFEV_RESERVATION_URL=http://datafev:9004/reservation/
    networks:
    - aggregator_network
    - external_network
    ports:
    - 9002:9002
  datafev:
    build:
      context: ./datafev
      dockerfile: ./Dockerfile
    container_name: datafev
    depends_on:
      mysql:
        condition: service_healthy
    environment:
    - MYSQL_HOST=mysql
    - MYSQL_PORT=3306
    - MYSQL_USER=root
    - MYSQL_PASSWORD=root
    - MYSQL_DB=mydatabase
    - PYTHONUNBUFFERED=1
    networks:
    - aggregator_network
    ports:
    - 9004:9004
    volumes:
    - ./datafev/outputs:/app/outputs
  event_manager:
    build:
      context: ./event_manager
      dockerfile: ./Dockerfile
    container_name: event_manager
    depends_on:
    - datafev
    environment:
    - SERVICE_API_URL=http://api:7000/routing/post_request_type1/
    - DATAFEV_INIT_URL=http://datafev:9004/datafev_init/
    - DATAFEV_GET_REQUEST_COUNTER_URL=http://datafev:9004/get_request_counter/
    - DATAFEV_SYNCHRONIZE_URL=http://datafev:9004/synchronize/
    - PYTHONUNBUFFERED=1
    networks:
    - external_network
    - aggregator_network
  mysql:
    container_name: mysql
    environment:
    - MYSQL_ROOT_PASSWORD=root
    - MYSQL_DATABASE=mydatabase
    healthcheck:
      retries: 10
      test:
      - CMD
      - mysqladmin
      - ping
      - -h
      - localhost
      timeout: 5s
    image: mysql:latest
    networks:
    - aggregator_network
    ports:
    - 3306:3306
  trafficapi:
    build:
      context: ./traffic
      dockerfile: ./Dockerfile
    container_name: TrafficAPI
    environment:
    - PYTHONUNBUFFERED=1
    networks:
    - external_network
    ports:
    - 8000:8000
version: '3'
